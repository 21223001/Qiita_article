javascript初学者の為，関数の巻き上げに対して，なんでこんな気持ち悪い機能がついてんだと思っていたが，アロー関数を使用すれば巻き上げを回避できる事を知った．また，他にもアロー関数を用いる利点があるので，それも含めて以下に記述する

### 要点
アロー関数は，function の代わりとなるが，巻き上げやthisの挙動が異なる．
javascript特有の巻き上げや，thisのコストを避けたい場合には，出来る限りアロー関数を用いるべき．
```
const a = (b, c) => {
    d = b +c;
    return d;
};
```



## アロー関数（Arrow Function）とは
アロー関数は、ES6（ECMAScript 2015）で導入された新記法  
`=>`（矢印）を使うことで、より簡潔に関数を定義できる  
また， **this の扱いが異なる** という特徴がある

## アロー関数の文法

### 基本的な構文
```javascript
const 関数名 = (引数1, 引数2, ...) => {
  処理;
  return 戻り値;
};



const a = (b, c) => {
    d = b +c;
    d = 6;
    return d;
};
